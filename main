#include<bits/stdc++.h>
using namespace std;

class marks {
  private:
    string name;
  int rollno;
  int computerProgramming;
  int maths;
  int reportWriting;
  int thermodynamics;
  int biology;
  float percent;
  public:
    int getRoll();
  void dataMenu();
  void insertData();
  void inputData();
  void viewData();
  void displayAll();
  void searchData();
  void addData();
  void modifyData();
  void deleteData();
}
m, m1, m2;

int marks::getRoll() {
  return rollno;
}

void marks::dataMenu() {

  marks s;
  char ch = 'y';
  int choice;

  do {
    cout << setw(50) << "BITS Pilani , Hyderabad Campus" << endl;
    cout << "--------------------------------------------------------------------------------" << endl;
    cout << "1. Add Data " << endl;
    cout << "2. Search " << endl;
    cout << "3. Modify Data " << endl;
    cout << "4. Delete Data " << endl;
    cout << "5. View Data " << endl;
    cout << "6. Exit " << endl;
    cout << "--------------------------------------------------------------------------------" << endl;
    cin >> choice;
    switch (choice) {
    case 1:
      s.addData();
      break;
    case 2:
      s.searchData();
      break;
    case 3:
      s.modifyData();
      break;
    case 4:
      s.deleteData();
      break;
    case 5:
      s.displayAll();
      break;
    case 6:
      cout << "Thank You";
      exit(0);
    default:
      cout << "Invalid choice: " << endl;

    }
    cout << "Continue Browsing?  (Y/N)" << endl;
    cin >> ch;
    
  
  } while (ch == 'y' || ch == 'Y');

}

void marks::addData() {

  char ans = 'y';
  fstream fout("STU.dat", ios::app | ios::binary);
  while (ans == 'y' || ans == 'Y') {
    m.inputData();
    cout << endl;
    fout.write((char * ) & m, sizeof(m));

    cout << "Records Added: " << endl;
    cout << "Want to Add more [Y/N]:";
    cin >> ans;
    cout << endl;

  }

  fout.close();
  
  m.dataMenu();

}

void marks::modifyData() {
  char f = 'n';
  string nm;
  marks s1;
  int r, rn, cp, maths, trw, thermo, bio;
  long pos;
  fstream fk("STU.dat", ios:: in | ios::out | ios::binary);
  cout << "Enter the ID No. whose data has to modified: ";
  cin >> rn;
  while (!fk.eof()) {
    pos = fk.tellg();
    fk.read((char * ) & s1, sizeof(s1));
    if (s1.getRoll() == rn) {
      f = 'y';
      s1.viewData();
      cout << "Enter New Data:" << endl;

      cout << "Enter Roll No. : ";
      '\n';
      cin >> r;
      '\n';
      s1.rollno = r;
      cin.get();
      cout << "Enter Name of Student : ";
      getline(cin, nm);;
      '\n';
      s1.name = nm;

 

      cout << "Enter Marks in Computer Programming : ";
      cin >> cp;
      s1.computerProgramming = cp;
      cout << "Enter Marks in Maths : ";
      cin >> maths;
      s1.maths = maths;
      cout << "Enter Marks in Report Writing : ";
      cin >> trw;
      s1.reportWriting = trw;
      cout << "Enter Marks in Thermodynamics : ";
      cin >> thermo;
      s1.thermodynamics = thermo;
      cout << "Enter Marks in Biology : ";
      cin >> bio;
      s1.biology = bio;
      fk.seekg(pos);
      fk.write((char * ) & s1, sizeof(s1));
      cout << endl;
      cout << "Your data after modification: " << endl;

      s1.viewData();
      break;
    }

  }

  if (f == 'n')
    cout << "Record not found\n";
  fk.seekg(0);

  fk.close();

  m.dataMenu();
}

void marks::deleteData() {

   ifstream fio("STU.dat", ios:: in );
   ofstream file("TEMP.dat", ios::out);
   int rno;
   char found = 'n';
   cout << "Enter the ID No. of Student whose Record is to be Deleted:\n";
   cin >> rno;
   while (!fio.eof()) {
     fio.read((char * ) & m1, sizeof(m1));
     if (m1.getRoll() == rno) {
       found = 'y';

     } else {
       file.write((char * ) & m1, sizeof(m1));
     }

   }
   if (found == 'n')
     cout << "record not found\n";
   fio.close();
   file.close();
   cout << "Record Deleted!" << endl;
   remove("STU.dat");
   rename("TEMP.dat", "STU.dat");

}

void marks::searchData() {
  fstream fin("STU.dat", ios:: in | ios::binary);
  int rno, i = 0;
  char found = 'n';
  cout << "Enter ID. to be searched :";
  cin >> rno;
  while (fin.read((char * ) & m, sizeof(m))) {
    if (m.getRoll() == rno) {
      m.viewData();
      found = 'y';
    }
    i++;
  }
  if (found == 'n') {
    cout << "No Record Found!" << endl;
  }
  fin.close();
  m.dataMenu();
}

void marks::inputData() {
  cin.get();
  cout << "Enter Roll No. : ";
  cin >> rollno;
  cin.get();
  cout << "Enter Name of Student : ";
  getline(cin, name);
  cout << "Enter Marks in Computer Programming : ";
  cin >> computerProgramming;
  cout << "Enter Marks in Maths : ";
  cin >> maths;
  cout << "Enter Marks in Report Writing : ";
  cin >> reportWriting;
  cout << "Enter Marks in Thermodynamics : ";
  cin >> thermodynamics;
  cout << "Enter Marks in Biology : ";
  cin >> biology;
  cout << endl;
}

void marks::viewData() {

  cout << "Roll No. : ";
  cout << rollno << endl;
  cout << "Name of Student : ";
  cout << name << endl;

  cout << "Marks in Computer Programming : ";
  cout << computerProgramming << endl;
  cout << "Marks in Maths : ";
  cout << maths << endl;
  cout << "Marks in Report Writing : ";
  cout << reportWriting << endl;
  cout << "Marks in Thermodynamics : ";
  cout << thermodynamics << endl;
  cout << "Marks in Biology : ";
  cout << biology << endl;
  cout << endl;

}

void marks::displayAll() {
  ifstream fin("STU.dat", ios:: in | ios::binary);
  while (fin.read((char * ) & m, sizeof(m))) {
    m.viewData();
  }
  fin.close();
}

int main() {
  marks l;

  fstream fm("STU.dat", ios:: in );
  if (fm) {
    l.dataMenu();
  } else {
    cout << "No records Entered Press Enter key to Enter data:";
    l.addData();
  }

  cout << "Thank You";
  return 0;
}
