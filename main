#include<bits/stdc++.h>
using namespace std;

//string admin_access_key = "admin";

class marks {
  private:
    char name[20];
  int rollno;
  int computerProgramming;
  int maths;
  int reportWriting;
  int biology;
  int thermodynamics;
  
  public:
    int getRoll();
  void dataMenu();
  //void dataMenuStudent();
  void insertData();
  void inputData();
  void viewData();
  void displayAll();
  void searchData();
  void addData();
  void modifyData();
  void deleteData();
}
m, m1, m2, adm, stu;

int marks::getRoll() {
  return rollno;
}

void marks::dataMenu() {

  marks s;
  char ch = 'y';
  int choice;

  do {
    cout << setw(50) << "BITS Pilani , Hyderabad Campus" << endl;
    cout << "--------------------------------------------------------------------------------" << endl;
    cout << "1. Add Data " << endl;
    cout << "2. Search " << endl;
    cout << "3. Modify Data " << endl;
    cout << "4. Delete Data " << endl;
    cout << "5. View Data " << endl;
    cout << "6. Exit " << endl;
    cout << "--------------------------------------------------------------------------------" << endl;
    cin >> choice;
    switch (choice) {

    case 1:
      s.addData();
      break;
    case 2:
      s.searchData();
      break;
    case 3:
      s.modifyData();
      break;
    case 4:
      s.deleteData();
      break;
    case 5:
      s.displayAll();
      break;
    case 6:
      cout << "Thank You";
      exit(0);
    default:
      cout << "Invalid choice: " << endl;

    }
    cout << "Continue Browsing?  (Y/N)" << endl;
    cin >> ch;
    
  } while (ch == 'y' || ch == 'Y');
}

// void marks::dataMenuStudent() {

//   marks s;
//   char ch = 'y';
//   int choice;

//   do {
//     cout << setw(50) << "BITS Pilani , Hyderabad Campus" << endl;
//     cout << "--------------------------------------------------------------------------------" << endl;
//     cout << "1. Search " << endl;
//     cout << "2. View Data " << endl;
//     cout << "3. Exit " << endl;
//     cout << "--------------------------------------------------------------------------------" << endl;
//     cin >> choice;
//     switch (choice) {

//     case 1:
//       s.searchData();
//       s.dataMenuStudent();
//       break;
//     case 2:
//       s.displayAll();
//       break;
//     case 3:
//       cout << "Thank You";
//       exit(0);
//     default:
//       cout << "Invalid choice: " << endl;

//     }
//     cout << "Continue Browsing?  (Y/N)" << endl;
//     cin >> ch;
    
//   } while (ch == 'y' || ch == 'Y');
// }


void marks::addData() {
  char ans = 'y';
  fstream fout("STU.dat", ios::app | ios::binary);
  while (ans == 'y' || ans == 'Y') {
    m.inputData();
    cout << endl;
    fout.write((char * ) & m, sizeof(m));

    cout << "Records Added: " << endl;
    cout << "Want to Add more [Y/N]:";
    cin >> ans;
    cout << endl;
  }
  fout.close();
  m.dataMenu();
}

void marks::modifyData() {
  char f = 'n', nm[20];
  marks s1;
  int r, rn, cp, math, thermo, bio, trw;
  long pos;
  fstream fk("STU.dat", ios:: in | ios::out | ios::binary);
  cout << "Enter the Roll No. whose data has to modified: ";
  cin >> rn;
  while (!fk.eof()) {
    pos = fk.tellg();
    fk.read((char * ) & s1, sizeof(s1));
    if (s1.getRoll() == rn) {
      f = 'y';
      s1.viewData();
      cout << "Enter New Data:" << endl;

      cout << "Enter Roll No. : ";
      '\n';
      cin >> r;
      '\n';
      s1.rollno = r;
      cin.get();
      cout << "Enter Name of Student : ";
      fgets(nm,sizeof(nm),stdin);
      '\n';
      strcpy(s1.name, nm);
      
      cout << "Enter Marks in Computer Programming : ";
      cin >> cp;
      s1.computerProgramming = cp;
      cout << "Enter Marks in Maths : ";
      cin >> math;
      s1.maths = math;
      cout << "Enter Marks in Report Writing : ";
      cin >> trw;
      s1.reportWriting = trw;
      cout << "Enter Marks in Biology : ";
      cin >> bio;
      s1.biology = bio;
      cout << "Enter Marks in Thermodynamics : ";
      cin >> thermo;
      s1.thermodynamics = thermo;
      fk.seekg(pos);
      fk.write((char * ) & s1, sizeof(s1));
      cout << endl;
      cout << "Your data after modification: " << endl;

      s1.viewData();
      break;
    }

  }
  if (f == 'n')
    cout << "Record not found\n";
  fk.seekg(0);
  fk.close();
  m.dataMenu();
}

void marks::deleteData() {
  ifstream fio("STU.dat", ios:: in );
  ofstream file("TEMP.dat", ios::out);
  int rno;
  char found = 'n';
  cout << "Enter the ID No. of Student whose Record is to be Deleted:\n";
  cin >> rno;
  while (!fio.eof()) {
    fio.read((char * ) & m1, sizeof(m1));
    if (m1.getRoll() == rno) {
      found = 'y';

    } else {
      file.write((char * ) & m1, sizeof(m1));
    }

  }
  if (found == 'n')
    cout << "record not found\n";
  fio.close();
  file.close();
  cout << "Record Deleted!" << endl;
  remove("STU.dat");
  rename("TEMP.dat", "STU.dat");
}

void marks::searchData() {
  
  fstream fin("STU.dat", ios:: in | ios::binary);
  int rno, i = 0;
  char found = 'n';
  cout << "Enter ID No. to be searched :";
  cin >> rno;
  while (fin.read((char * ) & m, sizeof(m))) {
    if (m.getRoll() == rno) {
      m.viewData();
      found = 'y';
    }
    i++;
  }
  if (found == 'n') {
    cout << "No Record Found!" << endl;
  }
  fin.close();
  m.dataMenu();

}

void marks::inputData() {
  cin.get();
  cout << "Enter Id No. : ";
  cin >> rollno;
  cin.get();
  cout << "Enter Name of Student : ";
  fgets(name,sizeof(name),stdin);

  cout << "Enter Marks in Computer Programming : ";
  cin >> computerProgramming;
  cout << "Enter Marks in Maths : ";
  cin >> maths;
  cout << "Enter Marks in Report Writing : ";
  cin >> reportWriting;
  cout << "Enter Marks in Biology : ";
  cin >> biology;
  cout << "Enter Marks in Thermodynamics : ";
  cin >> thermodynamics;
  cout << endl;
}

void marks::viewData() {

  cout << "ID No. : ";
  cout << rollno << endl;
  cout << "Name of Student : ";
  cout << name << endl;
  cout << "Marks in Computer Programming : ";
  cout << computerProgramming << endl;
  cout << "Marks in Maths : ";
  cout << maths << endl;
  cout << "Marks in Report Writing : ";
  cout << reportWriting << endl;
  cout << "Marks in Biology : ";
  cout << biology << endl;
  cout << "Marks in Thermodynamics : ";
  cout << thermodynamics << endl;
  cout << endl;

}

void marks::displayAll() {
  ifstream fin("STU.dat", ios:: in | ios::binary);
  while (fin.read((char * ) & m, sizeof(m))) {
    m.viewData();
  }
  fin.close();
}

// map <string, string> admin_list;
// map <string, string > student_list;

// int existingUser(string username, string password){
//   int username_length = (int) username.length();
//   if(username.substr(username_length-5)=="admin"){
//     if(admin_list.find(username)==admin_list.end() || admin_list[username]!=password){
//       return 0;
//     }
//     else{
//       return 1;
//     }
//   }
//   else if(username.substr(username_length-7)=="student"){
//     if(student_list.find(username)==student_list.end() || student_list[username]!=password){
//       return 0;
//     }
//     else{
//       return 2;
//     }
//   }
// }


// bool createStudentAccount(){
//   string username, password;
//   int user_response;
//   int account_choice=1;
//   while(account_choice){
//     cout<<"Create a username"<<endl;
//     cout<<"Student user account name must end with @student";
//     cin>>username;
//     cout<<"Create a password"<<endl;
//     cin>>password;
//     if(student_list.find(username)==student_list.end() ){
//       student_list[username] = password;
//       cout<<"New student account successfully created"<<endl;
//       return true;
//     }
//     else{
//       cout<<"Username already exists"<<endl;
//       cout<<"Choose: 1: Enter a new username 2: Exit"<<endl;
//       cin>>user_response;
//       if(user_response==1) continue;
//       else return false;
//     }
//   }

// }

// bool createAdminAccount(){
//   string username, password;
//   int user_response;
//   int account_choice=1;
//   while(account_choice){
//     cout<<"Create a username"<<endl;
//     cout<<"Admin user account name must end with @admin";
//     cin>>username;
//     cout<<"Create a password"<<endl;
//     cin>>password;
//     if(admin_list.find(username)==admin_list.end() ){
//       admin_list[username] = password;
//       cout<<"New Admin account successfully created"<<endl;
//       return true;
//     }
//     else{
//       cout<<"Username already exists"<<endl;
//       cout<<"Choose: 1: Enter a new username 2: Exit"<<endl;
//       cin>>user_response;
//       if(user_response==1) continue;
//       else return false;
//     }
//   }
// }

// void authentication(){
  
//   int choice_status = 1;
//   int user_response;
//   while(choice_status){
//       int user_account_status_choice; string username, password;
//       cout<<"Choose : 1. Existing user 2. New user \n";
//       cin>>user_account_status_choice;

// // Check for exsiting user

//       if(user_account_status_choice==1){
//         cout<<"You are an Existing user\n";
//         cout<<"Enter your username"<<endl;
//         cin>>username;
//         cout<<"Enter your password"<<endl;
//         cin>>password;
//         int login_status = existingUser(username, password);
//         if(login_status==0) {
//           cout<<"Invalid username or password"<<endl;
//         }
//         else if(login_status ==1 ){
//           cout<<"successful admin login"<<endl; choice_status=0;
//           // Display admin menu
//           adm.dataMenuAdmin();
//         }
//         else if(login_status==2){
//           cout<<"successful student login"<<endl; choice_status=0;
//           // Display student menu
//           stu.dataMenuStudent();
//         }
//       }

// // Create A new user

//       else if(user_account_status_choice==2){
//         bool account_creation_status;
//         cout<<"Creating a new user"<<endl;
//         cout<<"Create 1. Student account 2. Admin account 3. Exit"<<endl;
//         int account_choice; cin>>account_choice;
//         if(account_choice==1){
//           cout<<"Creating a Student account"<<endl;
//           // Function to create new student account
//           account_creation_status=createStudentAccount();
//           if(account_creation_status) {
//             //Display menu for student menu
//             stu.dataMenuStudent();
//           }
//           else cout<<"Account Creation failed"<<endl;

//         }
//         else if(account_choice==2){
//           cout<<"Creating an Admin account"<<endl;
//           cout<<"Input the admin access key to create a Admin account"<<endl;
//           string input_admin_access_key;
//           cin>>input_admin_access_key;
//           if(input_admin_access_key==admin_access_key){
//             cout<<"You are eligible to create an admin account"<<endl;
//             account_creation_status = createAdminAccount();
//             if(account_creation_status) {
//              //Display menu for admin menu
//              adm.dataMenuAdmin();
//             }
//             else{
//               cout<<"Account Creation failed"<<endl;            }
//           }
//           else{
//             cout<<"You do not have the access to create an admin account"<<endl;
//           }
//           // Do you wish to continue or not
//             cout<<"Do you wish to create a new user? \n 1.yes 2. Exit"<<endl;
//             cin>>user_response; 
//             if(user_response==1) continue;
//             else {
//               cout<<"Exiting user creation"<<endl; 
//               break;
//             } 
//         }
//       }
//       else{
//         cout<<"Invalid user account status choice"<<endl;
//         cout<<"Do you wish to re-enter user account status? \n 1.yes 2. Exit"<<endl;
//         cin>>user_response; 
//         if(user_response==1) continue;
//         else {
//           cout<<"Exiting the program"<<endl; 
//           break;
//         } 
//       }
//   }
// }

int main() {
  marks l; 
  fstream fm("STU.dat", ios:: in );
  if (fm) {
    l.dataMenu();
  } else {
    cout << "No records Entered Press Enter key to Enter data:"<<endl;
    l.addData();
  }

  cout << "Thank You";
  return 0;
}
